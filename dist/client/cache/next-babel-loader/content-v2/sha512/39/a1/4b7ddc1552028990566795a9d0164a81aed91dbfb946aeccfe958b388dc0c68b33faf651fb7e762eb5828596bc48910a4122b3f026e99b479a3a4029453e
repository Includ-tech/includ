{"ast":null,"code":"import _extends from \"E:/work/includ-tech.github.io/node_modules/@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport classes from \"../styles/Input.module.css\";\n\nvar input = function input(props) {\n  var inputElement = null;\n  var inputClasses = [classes.InputElement];\n\n  if (props.invalid && props.shouldValidate && props.touched) {\n    inputClasses.push(classes.Invalid);\n  }\n\n  switch (props.elementType) {\n    case \"input\":\n      inputElement = __jsx(\"input\", _extends({\n        className: inputClasses.join(\" \") + \" form-control\"\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed\n      }));\n      break;\n\n    case \"textarea\":\n      inputElement = __jsx(\"textarea\", _extends({\n        className: inputClasses.join(\" \") + \" form-control\"\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed\n      }));\n      break;\n\n    case \"select\":\n      inputElement = __jsx(\"select\", {\n        className: inputClasses.join(\" \") + \" form-control\",\n        value: props.value,\n        onChange: props.changed\n      }, props.elementConfig.options.map(function (option) {\n        return __jsx(\"option\", {\n          key: option.value,\n          value: option.value\n        }, option.displayValue);\n      }));\n      break;\n\n    default:\n      inputElement = __jsx(\"input\", _extends({\n        className: inputClasses.join(\" \") + \" form-control\"\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed\n      }));\n  }\n\n  return __jsx(\"div\", {\n    className: classes.Input\n  }, __jsx(\"label\", {\n    className: classes.Label\n  }, props.label), inputElement);\n};\n\nexport default input;","map":null,"metadata":{},"sourceType":"module"}